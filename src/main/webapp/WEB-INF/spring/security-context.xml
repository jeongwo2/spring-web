<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Part7-3 Spring Security XML configuration: URL 패턴과 해당 액세스 제어를 정의  -->
	<security:http>
		<!-- Part7-3 접근제한 설정: URL patterns and their access control -->
		<security:intercept-url pattern="/sample/all" access="permitAll" />
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/sample/admin"  access="hasRole('ROLE_ADMIN')" />

		<!-- Part7-4 접근 제한 메시지의 처리: Custom AccessDeniedHandler for handling access denied -->
		<security:access-denied-handler ref="customAccessDenied" />

		<!-- Part7-5 커스텀 로그인 페이지: Custom LoginSuccessHandler for handling login success -->
		<security:form-login login-page="/customLogin"
							 authentication-success-handler-ref="customLoginSuccess" />

		<!--  Part7-6 Logout configuration -->
		<security:logout logout-url="/customLogout" invalidate-session="true" />

		<!-- RememberMe configuration -->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />

	</security:http>

	<!-- Custom AccessDeniedHandler bean -->
	<!-- 사용자가 액세스할 수 없는 리소스에 접근하려고 할 때 호출되는 커스텀 액세스 거부 핸들러 -->
	<bean id="customAccessDenied"
		  class="com.example.myweb.security.CustomAccessDeniedHandler"></bean>

	<!-- Custom LoginSuccessHandler bean -->
	<!-- 사용자가 성공적으로 로그인할 때 호출되는 커스텀 로그인 성공 핸들러 -->
	<bean id="customLoginSuccess"
		  class="com.example.myweb.security.CustomLoginSuccessHandler"></bean>

	<!-- Part7 BCrypt 알고리즘을 사용하여 비밀번호를 인코딩 -->
	<bean id="bcryptPasswordEncoder"
		  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- CustomUserDetailsService bean for user authentication -->
	<!-- Part7 사용자 인증 -->
	<bean id="customUserDetailsService"
		  class="com.example.myweb.security.CustomUserDetailsService"></bean>

	<!-- Part7 회원 정보를 이용해서 로그인 처리:AuthenticationManager configuration -->
	<security:authentication-manager>
		<!-- UserDetailsService 를 구현한 CustomUserDetailsService 구성 -->
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder
				ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>